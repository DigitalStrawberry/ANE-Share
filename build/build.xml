<?xml version="1.0" encoding="UTF-8"?>
<project name="Share build scripts" default="all">

    <!-- Config -->
    <property file="build.properties"/>

    <!-- All -->
    <target name="all" depends="swc,ios,ios-sim,android,package" description="Full build of extension"/>

    <!--

    ================================================================
                                        iOS
    ================================================================

    -->
    <target name="ios" description="Build iOS project for iOS devices.">
        <antcall target="ios-build">
            <param name="IOS_TARGET" value="iphoneos"/>
            <param name="IOS_DIR" value="ios"/>
        </antcall>
    </target>
    <target name="ios-sim" description="Build iOS project for iOS simulators.">
        <antcall target="ios-build">
            <param name="IOS_TARGET" value="iphonesimulator"/>
            <param name="IOS_DIR" value="ios-sim"/>
        </antcall>
    </target>
    <target name="ios-build" description="Build iOS Library">
        <!-- make the build directory for the objc code -->
        <mkdir dir="temp/${IOS_DIR}/build/"/>

        <!-- compile the ios lib -->
        <exec executable="xcodebuild" failonerror="true" dir="../ios/">
            <arg line="-project ${name}.xcodeproj"/>
            <arg line="-sdk ${IOS_TARGET}"/>
            <arg line="-alltargets"/>
            <arg line="-configuration Release"/>
            <arg line="SYMROOT=../build/temp/${IOS_DIR}/build/"/>
        </exec>

        <!-- copy the ios lib to the base temp ios directory -->
        <copy file="temp/${IOS_DIR}/build/Release-${IOS_TARGET}/lib${name}.a" todir="temp/${IOS_DIR}" overwrite="true"/>
        
        <!-- Copy over required frameworks and libs -->
        <copy todir="temp/${IOS_DIR}/AIRExtHelpers.framework" overwrite="true">
            <fileset dir="../ios/Share/Frameworks/AIRExtHelpers.framework"/>
        </copy>

        <!-- remove the build directory -->
        <delete dir="temp/${IOS_DIR}/build/"/>
    </target>

    <!--

    ================================================================
                                Android
    ================================================================

    -->
    <target name="android" description="Build Android Library with debugging disabled">
        <property name="ANDROID_TARGET" value="release"/>
        <antcall target="android-build"/>
    </target>
    <target name="android-debug" description="Build Android Library with debugging enabled">
        <property name="ANDROID_TARGET" value="debug"/>
        <antcall target="android-build"/>
    </target>
    <target name="android-build" description="Build Android Library">
        <!-- build .aar using gradle -->
        <exec executable="${gradle.exec}" dir="../android" failonerror="true">
            <arg value="build" />
            <arg line="-x lint" />
        </exec>

        <!-- unzip .aar -->
        <mkdir dir="temp/android/aar" />
        <unzip src="../android/build/outputs/aar/android.aar" dest="temp/android/aar" />
        <!-- take the .jar -->
        <unzip src="temp/android/aar/classes.jar" dest="temp/android/aar/classes" />
        <delete file="temp/android/aar/classes/classes.jar" />
        <zip basedir="temp/android/aar/classes" destfile="temp/android/aar/classes/reziped.jar" />
        <copy file="temp/android/aar/classes/reziped.jar" tofile="temp/android/lib${name}.jar" overwrite="true" />
        <!-- copy resources -->
        <copy todir="temp/android/com.digitalstrawberry.ane.share-res/">
            <fileset dir="temp/android/aar/res/"/>
        </copy>
        <!-- clean up -->
        <delete dir="temp/android/aar" />
        <delete dir="../android/build" /> 
        <delete dir="../android/.gradle" /> 
    </target>



    <!--

    ================================================================
                            Actionscript (SWC)
    ================================================================

    -->
    <target name="swc" description="Build SWC library">
        <mkdir dir="temp/swc/content/"/>

        <fileset dir="../actionscript/src" casesensitive="yes" id="classfiles">
            <include name="**/*.as"/>
        </fileset>

        <pathconvert property="classlist" refid="classfiles" pathsep=" " dirsep=".">
            <regexpmapper from=".*src.(.*)\.as" to="\1"/>
        </pathconvert>

        <exec executable="${air.sdk}/bin/compc${bin.ext}" failonerror="true">
            <env key="AIR_SDK_HOME" value="${air.sdk}"/>
            <arg line='-define+=CONFIG::ane,true'/>
            <arg line='-source-path ../actionscript/src'/>
            <arg line='-output temp/swc/${name}.swc'/>
            <arg line='-swf-version=30'/>
            <arg line='-external-library-path+="${air.sdk}/frameworks/libs/air/airglobal.swc"'/>
            <arg line='-include-classes ${classlist}'/>
        </exec>

        <unzip src="temp/swc/${name}.swc" dest="temp/swc/content" overwrite="true"/>

        <copy file="temp/swc/content/library.swf" todir="temp/ios" overwrite="true"/>
        <copy file="temp/swc/content/library.swf" todir="temp/ios-sim" overwrite="true"/>
        <copy file="temp/swc/content/library.swf" todir="temp/android" overwrite="true"/>

        <!-- Create SWC without flash.external.ExtensionContext dependency -->
        <delete file="temp/swc/${name}.swc" />
        <delete dir="temp/swc/content"/>
        <exec executable="${air.sdk}/bin/compc${bin.ext}" failonerror="true">
            <env key="AIR_SDK_HOME" value="${air.sdk}"/>
            <arg line='-define+=CONFIG::ane,false'/>
            <arg line='-source-path ../actionscript/src'/>
            <arg line='-output temp/swc/${name}.swc'/>
            <arg line='-swf-version=30'/>
            <arg line='-external-library-path+="${air.sdk}/frameworks/libs/air/airglobal.swc"'/>
            <arg line='-include-classes ${classlist}'/>
        </exec>
        <unzip src="temp/swc/${name}.swc" dest="temp/swc/content" overwrite="true"/>
        <!-- Copy .swc to bin directory -->
        <copy file="temp/swc/${name}.swc" tofile="../bin/${packageName}.swc" overwrite="true" />
        <!-- Use the SWF for the default target -->
        <copy file="temp/swc/content/library.swf" todir="temp/default" overwrite="true"/>
    </target>

    <!--

    ================================================================
                                Package
    ================================================================

    -->
    <target name="package" description="Create the extension package">
        <exec executable="${air.sdk}/bin/adt${bin.ext}" failonerror="true" dir="temp/">
            <arg value="-package"/>
            <arg value="-target"/>
            <arg value="ane"/>
            <arg value="${packageName}.ane"/>
            <arg value="../extension.xml"/>
            <arg line="-swc swc/${name}.swc"/>
            <arg line="-platform iPhone-ARM -platformoptions ../platform-ios.xml -C ios/ ."/> 
            <arg line="-platform iPhone-x86 -platformoptions ../platform-ios.xml -C ios-sim/ ."/> 
            <arg line="-platform Android-ARM -platformoptions ../platform-android.xml -C android/ ."/>
            <arg line="-platform Android-ARM64 -platformoptions ../platform-android.xml -C android/ ."/>
            <arg line="-platform Android-x86 -platformoptions ../platform-android.xml -C android/ ."/>
            <arg line="-platform default -C default/ ."/>
        </exec>

        <move file="temp/${packageName}.ane" todir="../bin"/>

         <delete dir="temp/"/> 
    </target>

</project>
